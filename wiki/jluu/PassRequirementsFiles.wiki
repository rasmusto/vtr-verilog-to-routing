#summary Pass Requirements Files

= Pass Requirements Files =

== Overview ==
The provided scripts allow you to execute a task, and compare it to "golden" results generated by a previous task execution.  The comparison, which is performed when using the *`-check_golden`* option of the [ParseVTRTask parse_vtr_task.pl] script, reports either 'Pass' or 'Fail'.  The requirements that must be met to qualify for a 'Pass' are specified in the Pass Requirements File.

== Task Configuration==
Tasks can be configured to use a specific Pass Requirements File using the *pass_requirements_file* keyword in the [CreatingTasks#Task_Configuration_File Task Configuration File].

== File Location ==
All provided Pass Requirements Files are located here:
<code>
<vtr>/vtr_flow/parse/pass_requirements
</code>

Of course, the user may create his/her own as well.

== File Format ==
Each line of the file indicates a single metric, data type and allowable values in the following format:

<code>
`<metric_name>;<type>;<min_value>;<max_value>`
</code>

The *range* type can be used for numerical values, and specifies the permissible range, normalized to the golden result.  Any other data type specified, such as *string*, will require an exact match to pass.  

In order for a 'Pass' to be reported, *all* requirements must be met.  For this reason, all of the specified metrics must be included in the parse results (See [ParseFiles Parse Configuration Files]).  


== Example File == 
<code>
vpr_status;String
vpr_seconds;Range;0.80;1.40
width;Range;0.80;1.40
pack_time;Range;0.80;1.40
place_time;Range;0.80;1.40
route_time;Range;0.80;1.40
num_pre_packed_nets;Range;0.80;1.40
num_pre_packed_blocks;Range;0.80;1.40
num_post_packed_nets;Range;0.80;1.40
num_clb;Range;0.80;1.40
num_outputs;Range;0.80;1.40
error;String
</code>