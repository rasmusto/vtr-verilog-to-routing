/*
 * TCP_CircuitParser_c: P a r s e r  S u p p o r t
 *
 * Generated from: TCP_CircuitGrammar.g
 *
 * Terence Parr, Russell Quong, Will Cohen, and Hank Dietz: 1989-2001
 * Parr Research Corporation
 * with Purdue University Electrical Engineering
 * with AHPCRC, University of Minnesota
 * ANTLR Version 1.33MR33
 */

#define ANTLR_VERSION	13333
#include "pcctscfg.h"
#include "pccts_stdio.h"
#define ANTLR_SUPPORT_CODE
#include "tokens.h"
#include "TCP_CircuitParser_c.h"

const ANTLRChar *TCP_CircuitParser_c::tokenName(int tok)   { return _token_tbl[tok]; }

const ANTLRChar *TCP_CircuitParser_c::_token_tbl[]={
	/* 00 */	"Invalid",
	/* 01 */	"END_OF_FILE",
	/* 02 */	"CLOSE_QUOTE",
	/* 03 */	"STRING",
	/* 04 */	"UNCLOSED_STRING",
	/* 05 */	"[\\ \\t]+",
	/* 06 */	"CPP_COMMENT",
	/* 07 */	"BLOCK_COMMENT",
	/* 08 */	"NEW_LINE",
	/* 09 */	"OPEN_QUOTE",
	/* 10 */	"EQUAL",
	/* 11 */	"CIRCUIT",
	/* 12 */	"IO",
	/* 13 */	"PB",
	/* 14 */	"SB",
	/* 15 */	"PORT",
	/* 16 */	"INST",
	/* 17 */	"CELL",
	/* 18 */	"MASTER",
	/* 19 */	"NET",
	/* 20 */	"PIN",
	/* 21 */	"TYPE",
	/* 22 */	"ROUTABLE",
	/* 23 */	"STATUS",
	/* 24 */	"PACK",
	/* 25 */	"PLACE",
	/* 26 */	"CHANNEL",
	/* 27 */	"RELATIVE",
	/* 28 */	"GROUTE",
	/* 29 */	"ROUTE",
	/* 30 */	"SWITCHBOX",
	/* 31 */	"PLACE_FLOAT",
	/* 32 */	"PLACE_FIXED",
	/* 33 */	"PLACE_PLACED",
	/* 34 */	"PLACE_STATUS_VAL",
	/* 35 */	"NET_OPEN",
	/* 36 */	"NET_GROUTED",
	/* 37 */	"NET_ROUTED",
	/* 38 */	"NET_STATUS_VAL",
	/* 39 */	"LEFT",
	/* 40 */	"RIGHT",
	/* 41 */	"LOWER",
	/* 42 */	"UPPER",
	/* 43 */	"BOTTOM",
	/* 44 */	"TOP",
	/* 45 */	"SIDE_VAL",
	/* 46 */	"R",
	/* 47 */	"T",
	/* 48 */	"INPUT",
	/* 49 */	"OUTPUT",
	/* 50 */	"SIGNAL",
	/* 51 */	"CLOCK",
	/* 52 */	"POWER",
	/* 53 */	"GLOBAL",
	/* 54 */	"TYPE_VAL",
	/* 55 */	"BOOL_TRUE",
	/* 56 */	"BOOL_FALSE",
	/* 57 */	"BOOL_VAL",
	/* 58 */	"BIT_CHAR",
	/* 59 */	"NEG_INT",
	/* 60 */	"POS_INT",
	/* 61 */	"FLOAT",
	/* 62 */	"EXP",
	/* 63 */	"<",
	/* 64 */	">",
	/* 65 */	"</",
	/* 66 */	"REGION",
	/* 67 */	"/>",
	/* 68 */	"HIER"
};

TCP_CircuitParser_c::TCP_CircuitParser_c(ANTLRTokenBuffer *input) : ANTLRParser(input,1,0,0,12)
{
	token_tbl = _token_tbl;
	traceOptionValueDefault=0;		// MR10 turn trace OFF
}

SetWordType TCP_CircuitParser_c::err1[12] = {0x0,0xb0,0x9,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err2[12] = {0x0,0x20,0x4,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err3[12] = {0x8,0x6,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err4[12] = {0x0,0x4,0x0,0x80, 0x3,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::PLACE_STATUS_VAL_set[12] = {0x0,0x0,0x0,0x80, 0x3,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::PLACE_STATUS_VAL_errset[12] = {0x0,0x0,0x0,0x80, 0x3,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err7[12] = {0x0,0x0,0x0,0xb, 0x0,0x0,0x0,0x0, 0x4,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err8[12] = {0x0,0x90,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::setwd1[69] = {0x0,0x2,0x0,0x10,0x0,0x0,0x0,
	0x0,0x0,0x10,0x0,0x0,0x1,0xc,0x0,
	0x1,0x0,0x80,0x8c,0x0,0x0,0x0,0x0,
	0x84,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x20,0x20,0x20,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x40,0x0,0x40,0x0,0x0,0x0};
SetWordType TCP_CircuitParser_c::err9[12] = {0x0,0x0,0x6,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err10[12] = {0x8,0x6,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err11[12] = {0x0,0x4,0x0,0x80, 0x3,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err12[12] = {0x0,0x0,0x10,0x2, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err13[12] = {0x0,0x90,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err14[12] = {0x0,0x0,0x6,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err15[12] = {0x8,0x6,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::setwd2[69] = {0x0,0x0,0x0,0x22,0x0,0x0,0x0,
	0x0,0x0,0x22,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x11,0x11,0x0,0x0,0x80,0x80,
	0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x4,0x4,0x4,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x48,0x0,0x48,0x0,0x0,0x0};
SetWordType TCP_CircuitParser_c::err16[12] = {0x0,0x4,0x0,0x0, 0x0,0x0,0x3f,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::TYPE_VAL_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x3f,0x0};
SetWordType TCP_CircuitParser_c::TYPE_VAL_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x3f,0x0};
SetWordType TCP_CircuitParser_c::err19[12] = {0x0,0x4,0x0,0x0, 0x0,0x0,0x80,0x1, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::BOOL_VAL_set[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x80,0x1};
SetWordType TCP_CircuitParser_c::BOOL_VAL_errset[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x80,0x1};
SetWordType TCP_CircuitParser_c::err22[12] = {0x0,0x4,0x0,0x0, 0x38,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::NET_STATUS_VAL_set[12] = {0x0,0x0,0x0,0x0, 0x38,0x0,0x0,0x0};
SetWordType TCP_CircuitParser_c::NET_STATUS_VAL_errset[12] = {0x0,0x0,0x0,0x0, 0x38,0x0,0x0,0x0};
SetWordType TCP_CircuitParser_c::err25[12] = {0x0,0x0,0x10,0x30, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err26[12] = {0x0,0x40,0x10,0x4, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::setwd3[69] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x4,0x4,0x4,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x1,0x1,0x1,0x1,0x1,0x1,0x0,
	0x2,0x2,0x0,0x0,0x0,0x0,0x0,0x0,
	0x8,0xf0,0x8,0x0,0x0,0x0};
SetWordType TCP_CircuitParser_c::SIDE_VAL_set[12] = {0x0,0x0,0x0,0x0, 0x80,0xdf,0x0,0x0};
SetWordType TCP_CircuitParser_c::SIDE_VAL_errset[12] = {0x0,0x0,0x0,0x0, 0x80,0xdf,0x0,0x0};
SetWordType TCP_CircuitParser_c::setwd4[69] = {0x0,0x0,0x0,0x8,0x0,0x0,0x0,
	0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x40,0x40,0x40,0x40,0x40,0x40,0x0,0x40,
	0x40,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0xf6,0x0,0x0,0x1,0x0};
SetWordType TCP_CircuitParser_c::err29[12] = {0xc,0x0,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err30[12] = {0x8,0x2,0x0,0x0, 0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err31[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x3c, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err32[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x7c, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::err33[12] = {0x0,0x0,0x0,0x0, 0x0,0x0,0x0,0x14, 0x0,0x0,0x0,0x0
	};
SetWordType TCP_CircuitParser_c::setwd5[69] = {0x0,0x10,0x0,0x4,0x0,0x0,0x0,
	0x0,0x0,0x4,0x0,0x0,0x0,0x4,0x0,
	0x0,0x0,0x6,0x6,0x0,0x0,0x4,0x4,
	0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
	0x24,0x24,0x24,0x24,0x24,0x24,0x0,0x24,
	0x24,0x4,0x4,0x4,0x4,0x4,0x4,0x0,
	0x0,0x0,0x0,0xc,0x8,0xc,0x8,0x0,
	0x4,0x2f,0x0,0x0,0x4,0x0};
